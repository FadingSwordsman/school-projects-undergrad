Identification Section

Evaluator: David Lochridge
Team: G.E.R.A.
Team members:
	Ben Mixon-Baca
	Justin Edwards
	Trent Small
	David Lochridge
Date: May 14, 2014

Technology Evaluation Section

Technology#1:
Name:	Ruby on Rails
Purpose:	Primary front and back-end language
Chosen:	Recommendation of Trent, who had worked with it before.
Strengths:	Rapid deployment, working website within hours. Forced usage of MVC model. Allowed our app the be extremely customizable as far as look and feel went.
Weaknesses:	Drastically different programming ideal: The first half of the project consisted of running commands from the shell, looking at the site, and guessing that it worked.
		Setup hassles: the "Just run this one command and everything's installed and working" was an absolute lie. It took most of the group upwards of two weeks to install.
		Debugging: Because of all of the generated boilerplate, alongside our inexperience with Rails, fixing bugs was a huge pain.
		Rigidity: Many of the visions we had for features had to be beaten into the rails method, instead of being implemented as we wanted them. 
		Bleeding edge or bust: Documentation available was for the previous version of Rails, which caused a large number of misunderstandings of functions (And it was a difference between minor versions) In particular, forcing the queries to get the correct set of data was a huge pain.

Technology#2: 
Name:	Heroku
Purpose:	Deployment
Chosen:	Provided a simple way to deploy, recommended by Trent
Strengths:	After setup, worked wonderfully. Integrated extremely well with both git and RoR technology choices.
Weaknesses: The learning curve for setup, which was a big pain the first time.
		Usage of a database that was different from the development database: This was huge. A large number of assumptions that caused no end of headaches happened because MySQL returns null on an empty set, and Postgres returns "".


Tool#1:
Name:	Git
Purpose:	Source Control
Chosen:	Due to familiarity of team, partially because of integration with deployment technology, and 
Strengths:	No terrible merges happened at all during the process. Helped actually show the changes that the mystical rails commands created for us.
Weaknesses:	The connection with Heroku caused problems when commits were pushed there first, as opposed to the primary branch.

Tool#2:
Name:	GoogleDocs
Purpose:	Development documentation repository
Chosen:	For ease of use, team familiarity
Strengths:	Collaborative system was good for polishing a lot of the documents, making sure there were fewer typos
Weaknesses:	Online editing for some file formats wasn't possible, making this a tool we had to use in addition to others.

Team Evaluation Section

Member: David Lochridge
	Responsibilities:	External data, Wizard

	Contributions:	Wrote fetcher for external data. Designed a lot of the database layout with input from team. Wrote wizard.

Member: Ben Mixon-Baca
	Responsibilities:	Team lead, working on gamification model and components

	Contributions:	Came up with the project, got a lot of the early development plan together (Timeline, user story, feature designs), helped and worked a lot on the site overhaul. Wrote the equation evaluator with Trent.

Member: Justin Edwards
	Responsibilities:	Charting, CSS fixes and help

	Contributions:	Created the charts and charting over time, which was central to the project. Helped with visual style and getting the CSS to pretend it was behaving. Provided a workspace after the helicopter closed UNM.

Member: Trent Small
	Responsibilities:	Design of the Equations framework, visualizations and images for the site, gamification systems (Badges, shop)

	Contributions:	Provided much of the art for the project, particularly for the badges. Designed the equation evaluator and worked with Ben to implement it. Implemented the badge and shop systems, which were both central to the project's gamification.

		Time	Crea	Meet	Easy	Over
Ben Mixon-Baca	10	9	10	8	25
Justin Edwards	9	8	10	9	30
Trent Small	8	10	9	9	23
David Lochridge	9	7	9	8	22

Other Notes

I would work with any of these team members again, we got along fine (Or I saw it that way, at least) and managed to produce quite a bit. There were few minor hiccups, but nothing major that broke down. Ben got quite a bit more stressed than he usually is, and tried to introduce a ton of new feature ideas right near the end. We took the better ones, and they ended up being great, and integral to gamifying. While the stress was completely understandable, that was the primary thing that affected his easy to work with score.

Trent did quite a bit with handling the shop and badge system, mostly after getting the artwork made and remade a few times. About half way through the semester, he got very involved with writing a paper with one of the UNM professors, but was still a contributing member of the team, which was fairly impressive. Near the end, he missed a few meetings, but was a dependable team member despite that.

Justin was a huge help for CSS and general web development. He managed to build up a decent understanding of Rails, and ended up being the go-to person for helping with debugging problems. The chart section that he worked on ended up being one of the better overall sections (as far as coding and features go). On top of all of that, he did a good job at counter-balancing the extra features, and helped pare a lot of those features down to fit well within the scope of the project.
